version: '3.7'
services:
        sync:
                image: "elcolio/etcd:latest"
                command: "-name wavelet"
                volumes:
                        - wavelet_db:/data
        loadbalancer:
                image: "${REGISTRY-localhost:5000}/wavelet-stack-lb"
                ports:
                        - "80"
                        - "443:443"
                        - "9000-9047"
                        - "3000-3047"
                environment:
                        - WAVELET_API_HOST=${WAVELET_API_HOST}
        wavelet:
                image: "${REGISTRY-localhost:5000}/wavelet-stack-node:${WAVELET_TAG-latest}"
                command: "wavelet --api.port 9000 --db /db"
                stdin_open: true
                environment:
                        - WAVELET_SNOWBALL_K=${WAVELET_SNOWBALL_K-2}
                        - WAVELET_SNOWBALL_BETA=${WAVELET_SNOWBALL_BETA-25}
                        - WAVELET_MEMORY_MAX=${WAVELET_MEMORY_MAX}
                        - WAVELET_NODE_ID={{.Task.Slot}}
                        - WAVELET_KEYS=${WAVELET_KEYS}
                        - WAVELET_GENESIS=${WAVELET_GENESIS}
                        - WAVELET_RICH_WALLETS=${WAVELET_RICH_WALLETS-3}
                        - WAVELET_NO_RPC=${WAVELET_NO_RPC}
                        - WAVELET_API_HOST=${WAVELET_API_HOST}
                        - WAVELET_API_ACME_ACCOUNT_KEY=${WAVELET_API_ACME_ACCOUNT_KEY}
                        - WAVELET_BACKUP_DB=${WAVELET_BACKUP_DB-false}
                volumes:
                        - wavelet_db:/db
                depends_on:
                        - sync
                deploy:
                        replicas: ${WAVELET_NODES-3}
                        update_config:
                                parallelism: 1
                                delay: 30s
                healthcheck:
                        test: "/opt/perlin/bin/health"
        benchmark:
                image: "${REGISTRY-localhost:5000}/wavelet-stack-node"
                command: "benchmark remote -host wavelet:9000"
                stdin_open: true
                depends_on:
                        - wavelet
                environment:
                        - WAVELET_NODE_ID={{.Task.Slot}}
                        - WAVELET_KEYS=${WAVELET_KEYS}
                deploy:
                        replicas: ${WAVELET_BENCHMARK_NODES-0}
volumes:
        wavelet_db:
                name: "{{.Service.Name}}_wavelet_db_instance_{{.Task.Slot}}"
